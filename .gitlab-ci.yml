# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- docker
- test
variables:
  server_image: "$CI_REGISTRY/zerosrealm/tergum/tergum:latest"
  agent_image: "$CI_REGISTRY/zerosrealm/tergum/tergum-agent:latest"

build-ui:
  stage: build
  image: node:17-alpine
  only:
  - main
  script:
  # - export ROLLUP_WATCH=false
  - cd ui/
  - npm install
  - npm run build
  artifacts:
    paths:
    - ui/public

build-go:
  stage: build
  image: golang:1.17-bullseye
  only:
  - main
  script:
  - rm www/ -rf
  - cp ui/public www/
  - go build -trimpath ./cmd/agent
  - go build -trimpath ./cmd/server
  artifacts:
    paths:
    - agent
    - server
agent:
  stage: docker
  only:
  - main
  script:
  - export DOCKER_BUILDKIT=1
  - docker logout $CI_REGISTRY
  - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
  - docker build -f dockerfiles/agent -t $agent_image .
  - docker image push $agent_image
server:
  stage: docker
  only:
  - main
  script:
  - export DOCKER_BUILDKIT=1
  - docker logout $CI_REGISTRY
  - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
  - docker build -f dockerfiles/server -t $server_image .
  - docker image push $server_image
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
